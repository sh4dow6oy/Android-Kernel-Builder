name: Build Samsung Kernel

on:
  workflow_dispatch:
    inputs:
      model:
        description: 'Device model (e.g., g770f)'
        required: true
        default: g770f
      branch:
        description: 'Kernel branch to build'
        required: true
        default: SM-G770F

jobs:
  build-kernel:
    runs-on: ubuntu-22.04
    steps:
      # 1️⃣ Checkout kernel source
      - name: Checkout kernel source
        uses: actions/checkout@v3
        with:
          repository: sh4dow6oy/samsung_kernel
          ref: ${{ github.event.inputs.branch }}
          path: kernel

      # 2️⃣ Install build dependencies
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang make gcc git bc bison flex libssl-dev libncurses5-dev libelf-dev python2 unzip wget tar

      # 3️⃣ Setup Python2
      - name: Setup Python2
        run: |
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 1
          sudo update-alternatives --set python /usr/bin/python2

      # 4️⃣ Download and setup Android NDK (toolchain)
      - name: Setup Android NDK toolchain
        run: |
          TOOLCHAIN_PATH="$PWD/kernel/toolchain"
          NDK_VERSION="r27d"
          mkdir -p "$TOOLCHAIN_PATH"
          wget -qO ndk.zip "https://dl.google.com/android/repository/android-ndk-${NDK_VERSION}-linux.zip"
          unzip -q ndk.zip -d "$TOOLCHAIN_PATH"
          
          export PATH=$TOOLCHAIN_PATH/android-ndk-${NDK_VERSION}/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          export CROSS_COMPILE=aarch64-linux-android-
          export CC=clang
          clang --version

      # 5️⃣ Detect defconfig automatically
      - name: Detect defconfig
        id: detect-config
        run: |
          MODEL=${{ github.event.inputs.model }}
          DEFCONFIG=$(ls kernel/arch/arm64/configs/*_${MODEL}_defconfig 2>/dev/null || ls kernel/arch/arm64/configs/*_defconfig | head -n 1)
          echo "Using defconfig: $DEFCONFIG"
          echo "DEFCONFIG_NAME=$(basename $DEFCONFIG)" >> $GITHUB_OUTPUT

      # 6️⃣ Configure kernel
      - name: Configure kernel
        run: make O=out ARCH=arm64 ${{ steps.detect-config.outputs.DEFCONFIG_NAME }}
        working-directory: ./kernel

      # 7️⃣ Build kernel
      - name: Build kernel
        run: make O=out ARCH=arm64 -j$(nproc)
        working-directory: ./kernel

      # 8️⃣ Upload kernel image
      - name: Upload kernel image
        uses: actions/upload-artifact@v4
        with:
          name: kernel-image
          path: kernel/out/arch/arm64/boot/Image.gz-dtb
