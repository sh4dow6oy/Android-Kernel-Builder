name: Build Samsung SM-G770F Kernel

on:
  workflow_dispatch:

jobs:
  build-kernel:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout the kernel repository
      - name: Checkout kernel source
        uses: actions/checkout@v3
        with:
          repository: sh4dow6oy/samsung_kernel
          ref: SM-G770F
          submodules: recursive

      # 2️⃣ Install build dependencies
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang make gcc git bc bison flex libssl-dev libncurses5-dev libelf-dev wget tar

      # 3️⃣ Setup Clang toolchain
      - name: Setup Clang toolchain
        run: |
          TOOLCHAIN_PATH="$PWD/kernel/toolchain/clang"
          mkdir -p "$TOOLCHAIN_PATH"
          wget -O clang.tar.gz "https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/bd96dfe349c962681f0e5388af874c771ef96670/clang-r416183b.tar.gz"
          tar -xf clang.tar.gz -C "$TOOLCHAIN_PATH"
          export PATH="$TOOLCHAIN_PATH/clang-r416183b/bin:$PATH"
          export CC=clang
          echo "PATH=$PATH" >> $GITHUB_ENV
          echo "CC=$CC" >> $GITHUB_ENV
          echo "Clang toolchain setup complete"

      # 4️⃣ Clean output folder
      - name: Clean output folder
        run: rm -rf kernel/out

      # 5️⃣ Configure kernel
      - name: Configure kernel
        run: make O=out ARCH=arm64 g770f_defconfig CC=$CC
        working-directory: ./kernel

      # 6️⃣ Build kernel
      - name: Build kernel
        run: make O=out ARCH=arm64 CC=$CC -j$(nproc)
        working-directory: ./kernel

      # 7️⃣ Upload kernel image
      - name: Upload kernel image
        uses: actions/upload-artifact@v4
        with:
          name: kernel-image
          path: kernel/out/arch/arm64/boot/Image.gz-dtb
